// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification.proto

/*
Package notification is a generated protocol buffer package.

It is generated from these files:
	notification.proto

It has these top-level messages:
	NotificationMessage
	NotificationMode
	BlockNotification
	BlockRequest
	BlockResponse
	Ping
	HeaderHashesReq
	HeaderHashesResp
	HeightReq
	HeightResp
*/
package notification

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import qrl "github.com/theQRL/go-qrl/pkg/generated"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NotificationMessage_FuncName int32

const (
	NotificationMessage_NM               NotificationMessage_FuncName = 0
	NotificationMessage_PING             NotificationMessage_FuncName = 1
	NotificationMessage_BN               NotificationMessage_FuncName = 2
	NotificationMessage_BLOCKREQ         NotificationMessage_FuncName = 3
	NotificationMessage_BLOCKRESP        NotificationMessage_FuncName = 4
	NotificationMessage_HEADERHASHESREQ  NotificationMessage_FuncName = 5
	NotificationMessage_HEADERHASHESRESP NotificationMessage_FuncName = 6
	NotificationMessage_HEIGHTREQ        NotificationMessage_FuncName = 7
	NotificationMessage_HEIGHTRESP       NotificationMessage_FuncName = 8
)

var NotificationMessage_FuncName_name = map[int32]string{
	0: "NM",
	1: "PING",
	2: "BN",
	3: "BLOCKREQ",
	4: "BLOCKRESP",
	5: "HEADERHASHESREQ",
	6: "HEADERHASHESRESP",
	7: "HEIGHTREQ",
	8: "HEIGHTRESP",
}
var NotificationMessage_FuncName_value = map[string]int32{
	"NM":               0,
	"PING":             1,
	"BN":               2,
	"BLOCKREQ":         3,
	"BLOCKRESP":        4,
	"HEADERHASHESREQ":  5,
	"HEADERHASHESRESP": 6,
	"HEIGHTREQ":        7,
	"HEIGHTRESP":       8,
}

func (x NotificationMessage_FuncName) String() string {
	return proto.EnumName(NotificationMessage_FuncName_name, int32(x))
}
func (NotificationMessage_FuncName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type NotificationMessage struct {
	FuncName NotificationMessage_FuncName `protobuf:"varint,1,opt,name=func_name,json=funcName,enum=notification.NotificationMessage_FuncName" json:"func_name,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*NotificationMessage_NmData
	//	*NotificationMessage_PingData
	//	*NotificationMessage_BnData
	//	*NotificationMessage_BlockReqData
	//	*NotificationMessage_BlockRespData
	//	*NotificationMessage_HeaderHashesReqData
	//	*NotificationMessage_HeaderHashesRespData
	//	*NotificationMessage_HeightReqData
	//	*NotificationMessage_HeightRespData
	Data isNotificationMessage_Data `protobuf_oneof:"data"`
}

func (m *NotificationMessage) Reset()                    { *m = NotificationMessage{} }
func (m *NotificationMessage) String() string            { return proto.CompactTextString(m) }
func (*NotificationMessage) ProtoMessage()               {}
func (*NotificationMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isNotificationMessage_Data interface{ isNotificationMessage_Data() }

type NotificationMessage_NmData struct {
	NmData *NotificationMode `protobuf:"bytes,2,opt,name=nmData,oneof"`
}
type NotificationMessage_PingData struct {
	PingData *Ping `protobuf:"bytes,3,opt,name=pingData,oneof"`
}
type NotificationMessage_BnData struct {
	BnData *BlockNotification `protobuf:"bytes,4,opt,name=bnData,oneof"`
}
type NotificationMessage_BlockReqData struct {
	BlockReqData *BlockRequest `protobuf:"bytes,5,opt,name=blockReqData,oneof"`
}
type NotificationMessage_BlockRespData struct {
	BlockRespData *BlockResponse `protobuf:"bytes,6,opt,name=blockRespData,oneof"`
}
type NotificationMessage_HeaderHashesReqData struct {
	HeaderHashesReqData *HeaderHashesReq `protobuf:"bytes,7,opt,name=headerHashesReqData,oneof"`
}
type NotificationMessage_HeaderHashesRespData struct {
	HeaderHashesRespData *HeaderHashesResp `protobuf:"bytes,8,opt,name=headerHashesRespData,oneof"`
}
type NotificationMessage_HeightReqData struct {
	HeightReqData *HeightReq `protobuf:"bytes,9,opt,name=heightReqData,oneof"`
}
type NotificationMessage_HeightRespData struct {
	HeightRespData *HeightResp `protobuf:"bytes,10,opt,name=heightRespData,oneof"`
}

func (*NotificationMessage_NmData) isNotificationMessage_Data()               {}
func (*NotificationMessage_PingData) isNotificationMessage_Data()             {}
func (*NotificationMessage_BnData) isNotificationMessage_Data()               {}
func (*NotificationMessage_BlockReqData) isNotificationMessage_Data()         {}
func (*NotificationMessage_BlockRespData) isNotificationMessage_Data()        {}
func (*NotificationMessage_HeaderHashesReqData) isNotificationMessage_Data()  {}
func (*NotificationMessage_HeaderHashesRespData) isNotificationMessage_Data() {}
func (*NotificationMessage_HeightReqData) isNotificationMessage_Data()        {}
func (*NotificationMessage_HeightRespData) isNotificationMessage_Data()       {}

func (m *NotificationMessage) GetData() isNotificationMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NotificationMessage) GetFuncName() NotificationMessage_FuncName {
	if m != nil {
		return m.FuncName
	}
	return NotificationMessage_NM
}

func (m *NotificationMessage) GetNmData() *NotificationMode {
	if x, ok := m.GetData().(*NotificationMessage_NmData); ok {
		return x.NmData
	}
	return nil
}

func (m *NotificationMessage) GetPingData() *Ping {
	if x, ok := m.GetData().(*NotificationMessage_PingData); ok {
		return x.PingData
	}
	return nil
}

func (m *NotificationMessage) GetBnData() *BlockNotification {
	if x, ok := m.GetData().(*NotificationMessage_BnData); ok {
		return x.BnData
	}
	return nil
}

func (m *NotificationMessage) GetBlockReqData() *BlockRequest {
	if x, ok := m.GetData().(*NotificationMessage_BlockReqData); ok {
		return x.BlockReqData
	}
	return nil
}

func (m *NotificationMessage) GetBlockRespData() *BlockResponse {
	if x, ok := m.GetData().(*NotificationMessage_BlockRespData); ok {
		return x.BlockRespData
	}
	return nil
}

func (m *NotificationMessage) GetHeaderHashesReqData() *HeaderHashesReq {
	if x, ok := m.GetData().(*NotificationMessage_HeaderHashesReqData); ok {
		return x.HeaderHashesReqData
	}
	return nil
}

func (m *NotificationMessage) GetHeaderHashesRespData() *HeaderHashesResp {
	if x, ok := m.GetData().(*NotificationMessage_HeaderHashesRespData); ok {
		return x.HeaderHashesRespData
	}
	return nil
}

func (m *NotificationMessage) GetHeightReqData() *HeightReq {
	if x, ok := m.GetData().(*NotificationMessage_HeightReqData); ok {
		return x.HeightReqData
	}
	return nil
}

func (m *NotificationMessage) GetHeightRespData() *HeightResp {
	if x, ok := m.GetData().(*NotificationMessage_HeightRespData); ok {
		return x.HeightRespData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NotificationMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NotificationMessage_OneofMarshaler, _NotificationMessage_OneofUnmarshaler, _NotificationMessage_OneofSizer, []interface{}{
		(*NotificationMessage_NmData)(nil),
		(*NotificationMessage_PingData)(nil),
		(*NotificationMessage_BnData)(nil),
		(*NotificationMessage_BlockReqData)(nil),
		(*NotificationMessage_BlockRespData)(nil),
		(*NotificationMessage_HeaderHashesReqData)(nil),
		(*NotificationMessage_HeaderHashesRespData)(nil),
		(*NotificationMessage_HeightReqData)(nil),
		(*NotificationMessage_HeightRespData)(nil),
	}
}

func _NotificationMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NotificationMessage)
	// data
	switch x := m.Data.(type) {
	case *NotificationMessage_NmData:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NmData); err != nil {
			return err
		}
	case *NotificationMessage_PingData:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PingData); err != nil {
			return err
		}
	case *NotificationMessage_BnData:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BnData); err != nil {
			return err
		}
	case *NotificationMessage_BlockReqData:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlockReqData); err != nil {
			return err
		}
	case *NotificationMessage_BlockRespData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlockRespData); err != nil {
			return err
		}
	case *NotificationMessage_HeaderHashesReqData:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderHashesReqData); err != nil {
			return err
		}
	case *NotificationMessage_HeaderHashesRespData:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderHashesRespData); err != nil {
			return err
		}
	case *NotificationMessage_HeightReqData:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeightReqData); err != nil {
			return err
		}
	case *NotificationMessage_HeightRespData:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeightRespData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NotificationMessage.Data has unexpected type %T", x)
	}
	return nil
}

func _NotificationMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NotificationMessage)
	switch tag {
	case 2: // data.nmData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NotificationMode)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_NmData{msg}
		return true, err
	case 3: // data.pingData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ping)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_PingData{msg}
		return true, err
	case 4: // data.bnData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlockNotification)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_BnData{msg}
		return true, err
	case 5: // data.blockReqData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlockRequest)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_BlockReqData{msg}
		return true, err
	case 6: // data.blockRespData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BlockResponse)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_BlockRespData{msg}
		return true, err
	case 7: // data.headerHashesReqData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderHashesReq)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_HeaderHashesReqData{msg}
		return true, err
	case 8: // data.headerHashesRespData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderHashesResp)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_HeaderHashesRespData{msg}
		return true, err
	case 9: // data.heightReqData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeightReq)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_HeightReqData{msg}
		return true, err
	case 10: // data.heightRespData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeightResp)
		err := b.DecodeMessage(msg)
		m.Data = &NotificationMessage_HeightRespData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NotificationMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NotificationMessage)
	// data
	switch x := m.Data.(type) {
	case *NotificationMessage_NmData:
		s := proto.Size(x.NmData)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_PingData:
		s := proto.Size(x.PingData)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_BnData:
		s := proto.Size(x.BnData)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_BlockReqData:
		s := proto.Size(x.BlockReqData)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_BlockRespData:
		s := proto.Size(x.BlockRespData)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_HeaderHashesReqData:
		s := proto.Size(x.HeaderHashesReqData)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_HeaderHashesRespData:
		s := proto.Size(x.HeaderHashesRespData)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_HeightReqData:
		s := proto.Size(x.HeightReqData)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NotificationMessage_HeightRespData:
		s := proto.Size(x.HeightRespData)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NotificationMode struct {
	Enable bool `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
}

func (m *NotificationMode) Reset()                    { *m = NotificationMode{} }
func (m *NotificationMode) String() string            { return proto.CompactTextString(m) }
func (*NotificationMode) ProtoMessage()               {}
func (*NotificationMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NotificationMode) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type BlockNotification struct {
	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber" json:"block_number,omitempty"`
	HeaderHash  []byte `protobuf:"bytes,2,opt,name=headerHash,proto3" json:"headerHash,omitempty"`
}

func (m *BlockNotification) Reset()                    { *m = BlockNotification{} }
func (m *BlockNotification) String() string            { return proto.CompactTextString(m) }
func (*BlockNotification) ProtoMessage()               {}
func (*BlockNotification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BlockNotification) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *BlockNotification) GetHeaderHash() []byte {
	if m != nil {
		return m.HeaderHash
	}
	return nil
}

type BlockRequest struct {
	// Types that are valid to be assigned to BlockParam:
	//	*BlockRequest_HeaderHash
	//	*BlockRequest_BlockNumber
	BlockParam isBlockRequest_BlockParam `protobuf_oneof:"blockParam"`
}

func (m *BlockRequest) Reset()                    { *m = BlockRequest{} }
func (m *BlockRequest) String() string            { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()               {}
func (*BlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isBlockRequest_BlockParam interface{ isBlockRequest_BlockParam() }

type BlockRequest_HeaderHash struct {
	HeaderHash []byte `protobuf:"bytes,1,opt,name=headerHash,proto3,oneof"`
}
type BlockRequest_BlockNumber struct {
	BlockNumber uint64 `protobuf:"varint,2,opt,name=blockNumber,oneof"`
}

func (*BlockRequest_HeaderHash) isBlockRequest_BlockParam()  {}
func (*BlockRequest_BlockNumber) isBlockRequest_BlockParam() {}

func (m *BlockRequest) GetBlockParam() isBlockRequest_BlockParam {
	if m != nil {
		return m.BlockParam
	}
	return nil
}

func (m *BlockRequest) GetHeaderHash() []byte {
	if x, ok := m.GetBlockParam().(*BlockRequest_HeaderHash); ok {
		return x.HeaderHash
	}
	return nil
}

func (m *BlockRequest) GetBlockNumber() uint64 {
	if x, ok := m.GetBlockParam().(*BlockRequest_BlockNumber); ok {
		return x.BlockNumber
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BlockRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BlockRequest_OneofMarshaler, _BlockRequest_OneofUnmarshaler, _BlockRequest_OneofSizer, []interface{}{
		(*BlockRequest_HeaderHash)(nil),
		(*BlockRequest_BlockNumber)(nil),
	}
}

func _BlockRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BlockRequest)
	// blockParam
	switch x := m.BlockParam.(type) {
	case *BlockRequest_HeaderHash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.HeaderHash)
	case *BlockRequest_BlockNumber:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.BlockNumber))
	case nil:
	default:
		return fmt.Errorf("BlockRequest.BlockParam has unexpected type %T", x)
	}
	return nil
}

func _BlockRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BlockRequest)
	switch tag {
	case 1: // blockParam.headerHash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.BlockParam = &BlockRequest_HeaderHash{x}
		return true, err
	case 2: // blockParam.blockNumber
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.BlockParam = &BlockRequest_BlockNumber{x}
		return true, err
	default:
		return false, nil
	}
}

func _BlockRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BlockRequest)
	// blockParam
	switch x := m.BlockParam.(type) {
	case *BlockRequest_HeaderHash:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.HeaderHash)))
		n += len(x.HeaderHash)
	case *BlockRequest_BlockNumber:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.BlockNumber))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BlockResponse struct {
	Block *qrl.Block `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	Found bool       `protobuf:"varint,2,opt,name=found" json:"found,omitempty"`
}

func (m *BlockResponse) Reset()                    { *m = BlockResponse{} }
func (m *BlockResponse) String() string            { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()               {}
func (*BlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BlockResponse) GetBlock() *qrl.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *BlockResponse) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

type Ping struct {
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Ping) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type HeaderHashesReq struct {
	Count            uint64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	StartBlockNumber uint64 `protobuf:"varint,2,opt,name=startBlockNumber" json:"startBlockNumber,omitempty"`
}

func (m *HeaderHashesReq) Reset()                    { *m = HeaderHashesReq{} }
func (m *HeaderHashesReq) String() string            { return proto.CompactTextString(m) }
func (*HeaderHashesReq) ProtoMessage()               {}
func (*HeaderHashesReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *HeaderHashesReq) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *HeaderHashesReq) GetStartBlockNumber() uint64 {
	if m != nil {
		return m.StartBlockNumber
	}
	return 0
}

type HeaderHashesResp struct {
	Count            uint64   `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	StartBlockNumber uint64   `protobuf:"varint,2,opt,name=startBlockNumber" json:"startBlockNumber,omitempty"`
	HeaderHashes     [][]byte `protobuf:"bytes,3,rep,name=headerHashes,proto3" json:"headerHashes,omitempty"`
}

func (m *HeaderHashesResp) Reset()                    { *m = HeaderHashesResp{} }
func (m *HeaderHashesResp) String() string            { return proto.CompactTextString(m) }
func (*HeaderHashesResp) ProtoMessage()               {}
func (*HeaderHashesResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HeaderHashesResp) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *HeaderHashesResp) GetStartBlockNumber() uint64 {
	if m != nil {
		return m.StartBlockNumber
	}
	return 0
}

func (m *HeaderHashesResp) GetHeaderHashes() [][]byte {
	if m != nil {
		return m.HeaderHashes
	}
	return nil
}

type HeightReq struct {
}

func (m *HeightReq) Reset()                    { *m = HeightReq{} }
func (m *HeightReq) String() string            { return proto.CompactTextString(m) }
func (*HeightReq) ProtoMessage()               {}
func (*HeightReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type HeightResp struct {
	Height uint64 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
}

func (m *HeightResp) Reset()                    { *m = HeightResp{} }
func (m *HeightResp) String() string            { return proto.CompactTextString(m) }
func (*HeightResp) ProtoMessage()               {}
func (*HeightResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *HeightResp) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*NotificationMessage)(nil), "notification.NotificationMessage")
	proto.RegisterType((*NotificationMode)(nil), "notification.NotificationMode")
	proto.RegisterType((*BlockNotification)(nil), "notification.BlockNotification")
	proto.RegisterType((*BlockRequest)(nil), "notification.BlockRequest")
	proto.RegisterType((*BlockResponse)(nil), "notification.BlockResponse")
	proto.RegisterType((*Ping)(nil), "notification.Ping")
	proto.RegisterType((*HeaderHashesReq)(nil), "notification.HeaderHashesReq")
	proto.RegisterType((*HeaderHashesResp)(nil), "notification.HeaderHashesResp")
	proto.RegisterType((*HeightReq)(nil), "notification.HeightReq")
	proto.RegisterType((*HeightResp)(nil), "notification.HeightResp")
	proto.RegisterEnum("notification.NotificationMessage_FuncName", NotificationMessage_FuncName_name, NotificationMessage_FuncName_value)
}

func init() { proto.RegisterFile("notification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x75, 0x9a, 0xc4, 0x75, 0x26, 0x4e, 0x6b, 0xa6, 0x15, 0x44, 0x05, 0x4a, 0xb0, 0x7a, 0xa8,
	0x7a, 0x88, 0x50, 0xb9, 0xc0, 0x09, 0xea, 0x36, 0x64, 0x2b, 0x68, 0x48, 0x37, 0x15, 0xd7, 0x6a,
	0x93, 0x6c, 0x12, 0x8b, 0x7a, 0x9d, 0xc6, 0x8e, 0xc4, 0x3f, 0xf0, 0x73, 0x7c, 0x12, 0xda, 0xf5,
	0xa6, 0xf5, 0xba, 0x16, 0x17, 0x6e, 0x9e, 0x37, 0xef, 0xbd, 0x9d, 0x95, 0xdf, 0x2c, 0xa0, 0x88,
	0xd3, 0x70, 0x16, 0x4e, 0x58, 0x1a, 0xc6, 0xa2, 0xbb, 0x5c, 0xc5, 0x69, 0x8c, 0x6e, 0x1e, 0x3b,
	0x68, 0xdc, 0xaf, 0xee, 0xb2, 0x86, 0xff, 0xc7, 0x86, 0xbd, 0x41, 0xae, 0x77, 0xc5, 0x93, 0x84,
	0xcd, 0x39, 0xf6, 0xa1, 0x31, 0x5b, 0x8b, 0xc9, 0xad, 0x60, 0x11, 0x6f, 0x57, 0x3a, 0x95, 0xe3,
	0x9d, 0xd3, 0x93, 0xae, 0x61, 0x5c, 0xa2, 0xea, 0x7e, 0x59, 0x8b, 0xc9, 0x80, 0x45, 0x9c, 0x3a,
	0x33, 0xfd, 0x85, 0x1f, 0xc0, 0x16, 0xd1, 0x05, 0x4b, 0x59, 0x7b, 0xab, 0x53, 0x39, 0x6e, 0x9e,
	0x1e, 0xfe, 0xc3, 0x25, 0x9e, 0x72, 0x62, 0x51, 0xcd, 0xc7, 0x77, 0xe0, 0x2c, 0x43, 0x31, 0x57,
	0xda, 0xaa, 0xd2, 0xa2, 0xa9, 0x1d, 0x86, 0x62, 0x4e, 0x2c, 0xfa, 0xc0, 0xc2, 0x8f, 0x60, 0x8f,
	0x85, 0xe2, 0xd7, 0x14, 0xff, 0x8d, 0xc9, 0x0f, 0xee, 0xe2, 0xc9, 0xcf, 0xfc, 0x81, 0xf2, 0xb0,
	0x4c, 0x80, 0x9f, 0xc1, 0x1d, 0xcb, 0x36, 0xe5, 0xf7, 0xca, 0xa0, 0xae, 0x0c, 0x0e, 0x4a, 0x0c,
	0x28, 0xbf, 0x5f, 0xf3, 0x24, 0x25, 0x16, 0x35, 0x14, 0x78, 0x0e, 0x2d, 0x5d, 0x27, 0x4b, 0x65,
	0x61, 0x2b, 0x8b, 0x97, 0xa5, 0x16, 0xc9, 0x32, 0x16, 0x89, 0xbc, 0xac, 0xa9, 0xc1, 0x6b, 0xd8,
	0x5b, 0x70, 0x36, 0xe5, 0x2b, 0xc2, 0x92, 0x05, 0x4f, 0x36, 0xd3, 0x6c, 0x2b, 0xab, 0xd7, 0xa6,
	0x15, 0x31, 0x89, 0xc4, 0xa2, 0x65, 0x5a, 0xbc, 0x81, 0x7d, 0x13, 0xd6, 0xe3, 0x39, 0x65, 0xbf,
	0x83, 0x14, 0x98, 0xc4, 0xa2, 0xa5, 0x6a, 0xfc, 0x04, 0xad, 0x05, 0x0f, 0xe7, 0x8b, 0x74, 0x33,
	0x62, 0x43, 0xd9, 0xbd, 0x28, 0xda, 0x69, 0x8a, 0xbc, 0xa9, 0xc1, 0xc7, 0x00, 0x76, 0x36, 0x80,
	0x1e, 0x08, 0x94, 0x43, 0xbb, 0xdc, 0x41, 0x8d, 0x52, 0x50, 0xf8, 0xbf, 0x2b, 0xe0, 0x6c, 0x22,
	0x87, 0x36, 0x6c, 0x0d, 0xae, 0x3c, 0x0b, 0x1d, 0xa8, 0x0d, 0x2f, 0x07, 0x7d, 0xaf, 0x22, 0x91,
	0x60, 0xe0, 0x6d, 0xa1, 0x0b, 0x4e, 0xf0, 0xed, 0xfb, 0xf9, 0x57, 0xda, 0xbb, 0xf6, 0xaa, 0xd8,
	0x82, 0x86, 0xae, 0x46, 0x43, 0xaf, 0x86, 0x7b, 0xb0, 0x4b, 0x7a, 0x67, 0x17, 0x3d, 0x4a, 0xce,
	0x46, 0xa4, 0x37, 0x92, 0x9c, 0x3a, 0xee, 0x83, 0x67, 0x82, 0xa3, 0xa1, 0x67, 0x4b, 0x25, 0xe9,
	0x5d, 0xf6, 0xc9, 0x8d, 0x24, 0x6d, 0xe3, 0x0e, 0xc0, 0xa6, 0x1c, 0x0d, 0x3d, 0x27, 0xb0, 0xa1,
	0x36, 0x95, 0x53, 0x9d, 0x80, 0x57, 0x4c, 0x35, 0x3e, 0x07, 0x9b, 0x0b, 0x36, 0xbe, 0xcb, 0x76,
	0xc9, 0xa1, 0xba, 0xf2, 0x7f, 0xc0, 0xb3, 0x27, 0xa9, 0xc4, 0xb7, 0x3a, 0x8b, 0xb7, 0x62, 0x1d,
	0x8d, 0xf9, 0x4a, 0x49, 0x6a, 0xb4, 0xa9, 0xb0, 0x81, 0x82, 0xf0, 0x10, 0xe0, 0xf1, 0xb7, 0xa8,
	0xcd, 0x72, 0x69, 0x0e, 0xf1, 0xc7, 0xe0, 0xe6, 0xc3, 0x8a, 0x1d, 0x83, 0x2f, 0x0d, 0x5d, 0x62,
	0xe5, 0x15, 0xe8, 0x43, 0xfe, 0x00, 0x65, 0x59, 0x23, 0x96, 0x71, 0x6a, 0xe0, 0x02, 0xa8, 0x72,
	0xc8, 0x56, 0x2c, 0xf2, 0xfb, 0xd0, 0x32, 0xd2, 0x8c, 0x1d, 0xa8, 0xab, 0xb6, 0xf2, 0x6f, 0x9e,
	0x42, 0x57, 0x3e, 0x33, 0x19, 0x25, 0x6b, 0xe0, 0x3e, 0xd4, 0x67, 0xf1, 0x5a, 0x4c, 0x95, 0xbd,
	0x43, 0xb3, 0xc2, 0x3f, 0x82, 0x9a, 0x5c, 0x65, 0x7c, 0x05, 0x8d, 0x34, 0x8c, 0x78, 0x92, 0xb2,
	0x68, 0xa9, 0x2f, 0xfd, 0x08, 0xf8, 0x23, 0xd8, 0x2d, 0x24, 0x5e, 0xda, 0x4d, 0xe2, 0xb5, 0x48,
	0x35, 0x39, 0x2b, 0xf0, 0x04, 0xbc, 0x24, 0x65, 0xab, 0x34, 0x28, 0x5e, 0x87, 0x3e, 0xc1, 0xfd,
	0x5f, 0xe0, 0x15, 0x23, 0xff, 0xff, 0xae, 0xe8, 0x83, 0x9b, 0x5f, 0x9a, 0x76, 0xb5, 0x53, 0x3d,
	0x76, 0xa9, 0x81, 0xf9, 0x4d, 0x68, 0x3c, 0x6c, 0x87, 0x7f, 0x04, 0xf0, 0x18, 0x74, 0x19, 0x96,
	0x2c, 0xe8, 0x7a, 0x02, 0x5d, 0x8d, 0x6d, 0xf5, 0x64, 0xbf, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0x4b, 0xa9, 0x01, 0x01, 0xe1, 0x05, 0x00, 0x00,
}
